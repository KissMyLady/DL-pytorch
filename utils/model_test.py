# coding:utf-8
# Author:mylady
# 2023/7/28 12:05
from torch import nn


def test_2():
    # nn.GRU(32,32,2, dropout=0.1)
    net = nn.Sequential(
        nn.GRU(32, 32, 2)
    )
    print(net)

    from torchsummary import summary
    summary(net)

    """
    Sequential(
      (0): GRU(32, 32, num_layers=2, dropout=0.1)
    )
    
    =================================================================
    Layer (type:depth-idx)                   Param #
    =================================================================
    ├─GRU: 1-1                               12,672
    =================================================================
    Total params: 12,672
    Trainable params: 12,672
    Non-trainable params: 0
    =================================================================
    
    在计算 GRU 的参数量时，需要考虑以下几个方面：
    1. GRU 层的输入和输出通道数，分别为 32 和 32。  
    2. GRU 层的隐藏状态维度，为 32。  
    3. GRU 层的步长，为 2。
    
    根据这些参数，可以计算出 GRU 层的参数量。具体来说，GRU 层的参数量包括以下几个部分：
    1. 输入通道到隐藏状态的权重矩阵，大小为 (32, 32)。  
    2. 隐藏状态到输出通道的权重矩阵，大小为 (32, 32)。  
    3. 输入通道到隐藏状态的偏置矩阵，大小为 (32, 1)。  
    4. 隐藏状态到输出通道的偏置矩阵，大小为 (32, 1)。  
    5. 步长相关的权重矩阵，大小为 (32, 32)。  
    6. 步长相关的偏置矩阵，大小为 (32, 1)。
    
    因此，GRU 层的参数量可以计算为：
    参数量 = (32 * 32) + (32 * 32) + (32 * 1) + (32 * 1) + (32 * 32) + (32 * 1) = 6144
    
    1024 + 1024 + 32 + 32 + 1024 + 32 = 3168
    3168 * 2 * 2 = 12672
     
    需要注意的是，这里的参数量是指 GRU 层的参数量，不包括全连接层的参数量。如果全连接层的参数量也需要计算，需要根据全连接层的输入和输出通道数进行计算。
    """
    pass


def main():
    test_2()
    pass


if __name__ == "__main__":
    main()
